<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>org.eric.room.device</groupId>
	<artifactId>Computer_Room_Equipment_Det</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>room</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<knife4j.version>3.0.3</knife4j.version>
		<snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>
		<geotools.version>15.1</geotools.version>
	</properties>

	<repositories>
		<!-- Maven 依赖 -->
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
<!--		<repository>-->
<!--			<id>maven2-repository.dev.java.net</id>-->
<!--			<name>Java.net repository</name>-->
<!--			<url>http://download.java.net/maven/2</url>-->
<!--		</repository>-->
<!--		<repository>-->
<!--			<id>osgeo</id>-->
<!--			<name>OSGeo Release Repository</name>-->
<!--			<url>https://repo.osgeo.org/repository/release/</url>-->
<!--			<snapshots><enabled>false</enabled></snapshots>-->
<!--			<releases><enabled>true</enabled></releases>-->
<!--		</repository>-->
<!--		<repository>-->
<!--			<id>osgeo-snapshot</id>-->
<!--			<name>OSGeo Snapshot Repository</name>-->
<!--			<url>https://repo.osgeo.org/repository/snapshot/</url>-->
<!--			<snapshots><enabled>true</enabled></snapshots>-->
<!--			<releases><enabled>false</enabled></releases>-->
<!--		</repository>-->
	</repositories>
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2020.0.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>2021.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.github.xiaoymin</groupId>
				<artifactId>knife4j-micro-spring-boot-starter</artifactId>
				<version>${knife4j.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- pom.xml -->
		<dependency>
			<groupId>org.openpnp</groupId>
			<artifactId>opencv</artifactId>
			<version>4.7.0-0</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.onnxruntime</groupId>
			<artifactId>onnxruntime</artifactId>
			<version>1.15.1</version> <!-- 使用最新稳定版本 -->
		</dependency>
		<!-- ssh -->
		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.53</version>
		</dependency>
		<!-- SpringBoot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-to-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.xiaoymin</groupId>
			<artifactId>knife4j-micro-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<!-- SpringCloud -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
		</dependency>
		<dependency>
			<groupId>com.alibaba.cloud</groupId>
			<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-loadbalancer</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
			<version>2.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- 数据库 -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>3.0.5</version>
		</dependency>
		<dependency>
			<groupId>com.github.jeffreyning</groupId>
			<artifactId>mybatisplus-plus</artifactId>
			<version>1.7.4-RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>3.5.5</version>
		</dependency>

		<!-- 实体类的注解 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

		<!-- Junit测试 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

		<!-- Common -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>commons-pool</groupId>-->
<!--			<artifactId>commons-pool</artifactId>-->
<!--			<version>1.6</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.7.0</version>
		</dependency>

		<!-- 文件相关 -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>5.6</version>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>5.8.24</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>5.2.5</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.23.0</version>
		</dependency>

		<!-- dom4j -->
		<dependency>
			<groupId>org.dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>2.1.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.21.12</version>
		</dependency>
		<dependency>
			<groupId>com.github.luben</groupId>
			<artifactId>zstd-jni</artifactId>
			<version>1.5.5-5</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>room-1.0.0</finalName>
		<plugins>
			<!-- 添加 os-maven-plugin 用于自动检测操作系统 -->
			<plugin>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>1.7.1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>detect</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Protobuf 插件 -->
			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<version>0.6.1</version>
				<configuration>
					<protocArtifact>com.google.protobuf:protoc:3.21.12:exe:${os.detected.classifier}</protocArtifact>
					<protoSourceRoot>${project.basedir}/src/main/proto</protoSourceRoot>
					<outputDirectory>${project.build.directory}/generated-sources/protobuf</outputDirectory>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.37.0</version>
				<configuration>
					<!-- Docker 远程管理地址-->
					<dockerHost>unix:///var/run/docker.sock</dockerHost>
					<!-- <dockerHost>tcp://10.186.219.7:2375</dockerHost> -->
					<!--私服地址不使用可以不配置-->
					<registry>10.186.219.7:5000</registry>
					<images>
						<image>
							<!--命名空间/仓库名称:镜像版本号-->
							<name>10.186.219.7:5000/${project.artifactId}:${project.version}</name>
							<build>
								<args>
									<!--为Dockerfile中提供参数-->
									<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
									<OUT_DIRECTORY>target</OUT_DIRECTORY>
								</args>
								<!--dockerFile位置-->
								<dockerFileDir>${project.basedir}</dockerFileDir>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-exec</id>
						<!-- 绑定mvn install阶段，当执行mvn install时 就会执行docker build 和docker push-->
						<phase>install</phase>
						<goals>
							<goal>build</goal>
							<goal>save</goal>
							<goal>push</goal>
							<goal>remove</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>
	</build>
</project>
